name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: 1.23.x

    - name: Run tests
      run: go test -v ./...

    - name: Run linter
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.64.8

    - name: Build example binaries
      run: |
        # Create dist directory
        mkdir -p dist

        # Build example applications for multiple platforms
        echo "Building distributed-rate-limiting example..."
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o dist/distributed-rate-limiting-linux-amd64 ./examples/distributed-rate-limiting
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o dist/distributed-rate-limiting-darwin-amd64 ./examples/distributed-rate-limiting
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o dist/distributed-rate-limiting-darwin-arm64 ./examples/distributed-rate-limiting
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o dist/distributed-rate-limiting-windows-amd64.exe ./examples/distributed-rate-limiting

        echo "Building web-service example..."
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o dist/web-service-linux-amd64 ./examples/web-service
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o dist/web-service-darwin-amd64 ./examples/web-service
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o dist/web-service-darwin-arm64 ./examples/web-service
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o dist/web-service-windows-amd64.exe ./examples/web-service

        # List built files
        ls -la dist/

    - name: Generate changelog
      id: changelog
      run: |
        if [ -f CHANGELOG.md ]; then
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          cat CHANGELOG.md | head -20 >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "CHANGELOG=Automated release for ${{ github.ref_name }}" >> $GITHUB_OUTPUT
        fi

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref_name }}
        name: "goflow ${{ github.ref_name }}"
        body: |
          ## Changes
          ${{ steps.changelog.outputs.CHANGELOG }}

          ## Installation
          ```bash
          go get github.com/vnykmshr/goflow@${{ github.ref_name }}
          ```

          ## What's Changed
          See the [CHANGELOG.md](https://github.com/vnykmshr/goflow/blob/main/CHANGELOG.md) for detailed changes.

        artifacts: "dist/*"
        draft: false
        prerelease: false
        generateReleaseNotes: true